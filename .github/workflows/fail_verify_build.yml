name: fail verifyin packages through build
on: workflow_dispatch
jobs:
#  prepare:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: install jq
      run:  | 
        sudo apt-get install jq

    - name: install valint
      run: | 
        curl -sSfL https://get.scribesecurity.com/install.sh  | sh -s -- -t valint
        /home/runner/.scribe/bin/valint --help
  
#   import_dependencies:
#     runs-on: ubuntu-latest
#     needs: prepare
    
#     steps:
    - name: install npm dependencies
      run: npm install
    
    - name: tamper with npm dependency
      run: | 
        ls -lt
        ls node_modules
        ls node_modules/@babel
        ls node_modules/@babel/cli
        cat node_modules/@babel/cli/LICENSE
        echo "Hacked" >> node_modules/@babel/cli/LICENSE

    - name: generate current dependency list
      id: valint_json
      uses: scribe-security/action-bom@master
      with:
        type: dir
        target: .
        output-file: build-dependencies-sbom.json

#   validate_dependencies:
#     runs-on: ubuntu-latest
#     needs: import_dependencies
#     steps:
    - name: create dependencies comp
      run: |
        /home/runner/.scribe/bin/valint diff build-dependencies-sbom.json webrix-dependencies-sbom.json -vv --integrity modified -O modified.json --paths node_modules:node_modules
        cat modified.json
        cat modified.json | jq ".synopsis"
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: bad-diff-result
        path: modified.json
        
    - name: evaluate comp
      run: |
        result=$(cat modified.json | jq ".synopsis.modified")
        echo $result
        if [ "$result" -ne "0" ]
        then 
          echo "Package integrity error."
          exit 1
        else
          echo "Package integrity validated successully."
        fi
        
#   continue_build:
#     runs-on: ubuntu-latest
#     needs: validate_dependencies
#     steps:
    - name: Build final artifact
      run: echo "Building!"

    # - name: npm build
    #   run: npm run build:prod
    #   continue-on-error: true
    # - name: Publish to Registry
    #   uses: elgohr/Publish-Docker-Github-Action@v5
    #   with:
    #     name: scribesecurity/webrix:latest
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
